<!doctype html>
<%# Type: dynamic
		Catorgory: clutter %>
<html lang="en-US">

<head>
<link rel="stylesheet" href="/style.css">
</head>
<body>
<%- include("playerEmbed") -%><div id="links"><a href="/clutters/<%- id -%>" target="_parent" id="viewOnclutter">View <%- cName -%> on Clutter</a><span id="otherlinks"> | </span><a href id="curScratchProjectLink" target="_parent">View current project on Scratch</a><span id="fullTurbowarpPara">(<a href id="curTurbowarpProjectLink" target="_parent">Turbowarp</a>)</span></div>
<script>
const search = location.search.split(/[?&]/)
search.shift()
location.searchtree = {}
for (let i = 0; i < search.length; i++) {
	if (search[i].includes("=")) {
		location.searchtree[search[i].split(/=/)[0]] = search[i].split(/=/)[1]
	} else {
		location.searchtree[search[i]] = search[i]
	}
}
var clutter = []
var originalIds = []
function renderClutter(array) {
	originalIds = array
	console.log(array, `this should repeat ${array.length} time(s)`)
	clutter = []
	for (let i = 0; i < array.length; i++) { clutter.push(`//turbowarp.org/${array[i]}` )
	}
	console.log(clutter)
	let cluttero = clutter[0]
	let embed = checkForSlash(cluttero)
	document.getElementById("iframe").src = clutter[0] + embed + "?autoplay"
	document.getElementById("curScratchProjectLink").href = "//scratch.mit.edu/projects/" + originalIds[0]
	document.getElementById("curTurbowarpProjectLink").href = "//turbowarp.org/" + originalIds[0]
}

function nextProject(array) {
	let current = array.indexOf(document.getElementById("iframe").src) + 2
	let next = array[current]
	console.log(next + "?autoplay")
	alsoSet(current + 1, next)
}

function lastProject(array) {
	let current = array.indexOf(document.getElementById("iframe").src) + 1
	let last = array[current]
	console.log(last + "?autoplay")
	alsoSet(current, last)
}

function checkForSlash(url) {
	if (url[url.length - 1] == "/") {
		return "embed"
	} else {
		return "/embed"
	}
}
function checkForSlashTF(url) {
	if (url[url.length - 1] == "/") {
		return true
	} else {
		return false
	}
}

function alsoSet(num, vari) {
	document.getElementById("iframe").src = vari + checkForSlash(vari)
	document.getElementById("curScratchProjectLink").href = "//scratch.mit.edu/projects/" + originalIds[num]
	document.getElementById("curTurbowarpProjectLink").href = "//turbowarp.org/" + originalIds[num]
}

function start() {
	document.getElementById("iframe").outerHTML = "<iframe width=\"485\" height=\"402\" id=\"iframe\" align=\"left\" src></iframe>"
	document.getElementById("layerOntopOfPlayer").outerHTML = ""
	renderClutter(<%- JSON.stringify(proj) -%>)
}

if (Object.keys(location.searchtree).includes("autoplay")) {
	start()
}
if (Object.keys(location.searchtree).includes("hideturbowarp")) {
	document.getElementById("fullTurbowarpPara").style.display = "none"
}
if (Object.keys(location.searchtree).includes("hidescratch")) {
	document.getElementById("curScratchProjectLink").style.display = "none"
}
if (Object.keys(location.searchtree).includes("hideclutter")) {
	document.getElementById("viewOnclutter").style.display = "none"
}
if (Object.keys(location.searchtree).includes("hideclutter") || Object.keys(location.searchtree).includes("hidescratch") && Object.keys(location.searchtree).includes("hideturbowarp")) {
	document.getElementById("otherlinks").style.display = "none"
}
</script>
</body>

</html>